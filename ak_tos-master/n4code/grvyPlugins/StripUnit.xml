<?xml version="1.0" encoding="UTF-8"?>
<argo:snx xmlns:argo="http://www.navis.com/argo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.navis.com/argo snx.xsd">
<digital-asset id="StripUnit" short-description="StripUnit" groovy-code="import com.navis.apex.business.model.GroovyInjectionBase&#xA;import com.navis.argo.business.atoms.EventEnum&#xA;import com.navis.argo.business.atoms.LocTypeEnum&#xA;import com.navis.argo.business.reference.*&#xA;import com.navis.inventory.business.units.*&#xA;import com.navis.framework.util.BizViolation&#xA;&#xA;class StripUnit extends GroovyInjectionBase {&#xA;    public String execute(Map inParameters) {&#xA;&#x9;def ctrId = inParameters.get(&quot;equipment-id&quot;);&#xA;try {&#xA;    def recorder = (String) inParameters.get(&quot;recorder&quot;);&#xA;&#xA;&#x9;// Find the active UFV&#xA;&#x9;def fullUfv = null;&#xA;&#x9;try {&#xA;&#x9;&#x9;fullUfv = findActiveUfv(ctrId);&#xA;&#x9;} catch ( BizViolation ex) {&#xA;&#x9;&#x9;fail((new StringBuilder()).append(&quot;ERR_GVY_STRIP_001. Could not find unit: &quot;).append(ctrId).toString());&#xA;&#x9;}&#xA;&#x9;// check if the commodity id is ok.&#xA;&#x9;def ufvUnit = fullUfv.getUfvUnit();&#xA;&#x9;if ( ufvUnit.isStorageEmpty())&#xA;&#x9;&#x9;fail((new StringBuilder()).append(&quot;ERR_GVY_STRIP_002. Could not STRIP EMPTY unit: &quot;).append(ctrId).toString());&#xA;&#x9;def stripGoods = ufvUnit.getUnitGoods();&#xA;&#x9;if ( stripGoods != null) {&#xA;&#x9;&#x9;def stripComm = stripGoods.getGdsCommodity();&#xA;&#x9;&#x9;if ( stripComm != null) {&#xA;&#x9;&#x9;&#x9;def commId = stripComm.getCmdyShortName();&#xA;&#x9;&#x9;&#x9;if ( commId.length() &lt; 3)&#xA;&#x9;&#x9;&#x9;&#x9;fail((new StringBuilder()).append(&quot;ERR_GVY_STRIP_003. Could not STRIP unit: &quot;).append(ctrId).append(&quot; with COMMODITY code: &quot;).append(commId).toString());&#xA;&#xA;&#x9;&#x9;&#x9;if ( !commId.substring(0, 3).equalsIgnoreCase( &quot;AUT&quot;)&#xA;&#x9;&#x9;&#x9;&#x9;|| !commId.substring(0, 3).equalsIgnoreCase( &quot;CFS&quot;)&#xA;&#x9;&#x9;&#x9;&#x9;|| !commId.substring(0, 3).equalsIgnoreCase( &quot;COB&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;fail((new StringBuilder()).append(&quot;ERR_GVY_STRIP_003. Could not STRIP unit: &quot;).append(ctrId).append(&quot; with COMMODITY code: &quot;).append(commId).toString());&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#x9;// Strp it, and get back the new full UFV and Unit&#xA;&#x9;def strippedUfv = stripUfvAndRecordEvent( fullUfv, null, &quot;JF&quot;);&#xA;&#x9;def strippedUnit = strippedUfv.getUfvUnit();&#xA;&#x9;// get commodity code&#xA;&#x9;def unitGoods = strippedUnit.getUnitGoods();&#xA;&#x9;def unitComm = unitGoods.getGdsCommodity();&#xA;&#x9;if ( unitComm != null) {&#xA;&#x9;&#x9;def commodityId = unitComm.getCmdyShortName();&#xA;&#x9;&#x9;if ( commodityId.equalsIgnoreCase( &quot;AUTOCON&quot;)) {&#xA;&#x9;&#x9;&#x9;unitComm = Commodity.findOrCreateCommodity( commodityId);&#xA;&#x9;&#x9;&#x9;unitComm.setCmdyShortName( &quot;EMPTY CFS&quot;);&#xA;&#x9;&#x9;} else {&#xA;&#x9;&#x9;&#x9;unitComm = Commodity.findOrCreateCommodity( &quot;MTYAUT&quot;);&#xA;&#x9;&#x9;&#x9;unitComm.setCmdyShortName( &quot;EMPTY AUTO&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;} else {&#xA;&#x9;&#x9;unitComm = Commodity.findOrCreateCommodity( &quot;MTYAUT&quot;);&#xA;&#x9;&#x9;unitComm.setCmdyShortName( &quot;EMPTY AUTO&quot;);&#xA;&#x9;}&#xA;&#xA;&#x9;unitGoods.setGdsCommodity(unitComm);&#xA;&#xA;&#x9;// Record an event&#xA;&#x9;strippedUnit.recordUnitEvent(EventEnum.UNIT_STRIP, null, &quot;Stripped by &quot; + recorder);&#xA;&#x9;return &quot;done via Groovy, unit is: &quot; + strippedUnit;&#xA;&#xA;} catch ( Exception ex) {&#xA;&#x9;fail((new StringBuilder()).append(ex.toString()).append(&quot;ERR_GVY_STRIP_999. Could not STRIP unit: &quot;).append(ctrId).toString());&#xA;}&#xA;}&#xA;}&#xA;&#xA;" />
</argo:snx>

